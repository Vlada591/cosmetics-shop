from flask import Flask, request, make_response, redirect, url_for, render_template
from flask_sqlalchemy import SQLAlchemy
import json

app = Flask(__name__)

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///orders.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# üß± –ú–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–∞
class Order(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(20), nullable=False)
    delivery = db.Column(db.String(50), nullable=False)
    address = db.Column(db.String(200), nullable=False)
    payment = db.Column(db.String(50), nullable=False)
    products = db.Column(db.Text, nullable=False)
    total = db.Column(db.Integer, nullable=False)

# üì¶ –¢–æ–≤–∞—Ä—ã
products = [
    {'id': 1, 'name': '–ü—É–¥—Ä–∞ Velvet Skin', 'description': '–ù—ñ–∂–Ω–∞ –ø—É–¥—Ä–∞ –¥–ª—è –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ —Å—è–π–≤–∞ —à–∫—ñ—Ä–∏.', 'price': 299, 'image': 'powder.jpg'},
    {'id': 2, 'name': '–¢–æ–Ω–∞–ª—å–Ω–∞ –æ—Å–Ω–æ–≤–∞ Glow Fit', 'description': '–¢–æ–Ω —ñ–∑ –µ—Ñ–µ–∫—Ç–æ–º –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ –ª–µ–≥–∫–æ—ó —Ç–µ–∫—Å—Ç—É—Ä–∏.', 'price': 349, 'image': 'foundation.jpg'},
    {'id': 3, 'name': '–ö–æ–Ω—Å–∏–ª–µ—Ä Soft Touch', 'description': '–Ü–¥–µ–∞–ª—å–Ω–æ –º–∞—Å–∫—É—î –Ω–µ–¥–æ–ª—ñ–∫–∏ –±–µ–∑ –µ—Ñ–µ–∫—Ç—É –º–∞—Å–∫–∏.', 'price': 199, 'image': 'concealer.jpg'},
    {'id': 4, 'name': '–¢—É—à –¥–ª—è –≤—ñ–π LN PRO GLOW UP', 'description': "–¢—É—à –¥–ª—è –≤—ñ–π GLOW UP Curl and Volume, —á–æ—Ä–Ω–∞. –ü–æ–¥–∞—Ä—É–π—Ç–µ –≤—ñ—è–º –æ–±'—î–º —Ç–∞ –ø—ñ–¥–∫—Ä—É—á—É–≤–∞–Ω–Ω—è.", 'price': 148, 'image': 'glow-up.jpg'},
    {'id': 5, 'name': "–¢—É—à Eveline EXTENSION –æ–±'—î–º–Ω–∞", 'description': "–ï—Ñ–µ–∫—Ç –Ω–∞–∫–ª–∞–¥–Ω–∏—Ö –≤—ñ–π, XXL –æ–±'—î–º —Ç–∞ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è.", 'price': 150, 'image': 'eveline-extension.jpg'},
    {'id': 6, 'name': "–¢—É—à Maybelline Lash Sensational Firework", 'description': "–î–æ–≤–∂–∏–Ω–∞, –æ–±'—î–º, –≤–∏—Ä–∞–∑–Ω—ñ—Å—Ç—å ‚Äî –∑ –ø–µ—Ä—à–æ–≥–æ –Ω–∞–Ω–µ—Å–µ–Ω–Ω—è.", 'price': 416, 'image': 'maybelline-lash.jpg'},
    {'id': 7, 'name': "–ì–µ–ª—å-—Ç—É—à –¥–ª—è –±—Ä—ñ–≤ L'Oreal Infaillible", 'description': "–ï—Ñ–µ–∫—Ç –ª–∞–º—ñ–Ω—É–≤–∞–Ω–Ω—è –¥–æ 24 –≥–æ–¥–∏–Ω.", 'price': 504, 'image': 'gloreal-brow.jpg'},
    {'id': 8, 'name': "–ì–µ–ª—å –¥–ª—è –±—Ä—ñ–≤ Eveline BROW&GOW", 'description': "–§—ñ–∫—Å–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ —Ç–∞ –ø—Ä–∏—Ä–æ–¥–Ω–∏–π –≤–∏–≥–ª—è–¥.", 'price': 134, 'image': 'eveline-brow.jpg'},
    {'id': 9, 'name': "–ö—Ä–µ–º-–ø—É–¥—Ä–∞ Maybelline Superstay", 'description': "–°—Ç—ñ–π–∫–µ –ø–æ–∫—Ä–∏—Ç—Ç—è –¥–æ 24 –≥–æ–¥–∏–Ω.", 'price': 371, 'image': 'maybelline-superstay.jpg'},
    {'id': 10, 'name': "–û–ª—ñ–≤–µ—Ü—å –¥–ª—è –≥—É–± Lumene LUMINOUS 3", 'description': "–õ–µ–≥–∫–∏–π, —Ç–æ—á–Ω–∏–π –∫–æ–Ω—Ç—É—Ä, 1.1 –≥.", 'price': 215, 'image': 'lumene-pencil.jpg'},
    {'id': 11, 'name': "–ü–æ–º–∞–¥–∞ L'Or√©al Matte Resistance–µ 105", 'description': "–ú–∞—Ç–æ–≤–∞, –∑–≤–æ–ª–æ–∂—É—é—á–∞ —Ñ–æ—Ä–º—É–ª–∞, –≥—ñ–∞–ª—É—Ä–æ–Ω.", 'price': 417, 'image': 'loreal-matte-105.jpg'},
    {'id': 12, 'name': "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è Vichy Purete Thermale", 'description': "–û—Å–≤—ñ–∂–∞—î, –æ—á–∏—â–∞—î, –¥–ª—è —á—É—Ç–ª–∏–≤–æ—ó —à–∫—ñ—Ä–∏.", 'price': 651, 'image': 'vichy-gel.jpg'},
    {'id': 13, 'name': "–°–∏—Ä–æ–≤–∞—Ç–∫–∞-—Ä–æ–ª–µ—Ä FarmStay –∑ —Ä–µ—Ç–∏–Ω–æ–ª–æ–º", 'description': "–û–º–æ–ª–æ–¥–∂–µ–Ω–Ω—è, –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è, –º–µ–Ω—à–µ –∑–º–æ—Ä—à–æ–∫.", 'price': 350, 'image': 'farmstay-serum.jpg'},
    {'id': 14, 'name': "–†—ñ–¥–∫–∞ –ø–æ–º–∞–¥–∞-—Ä—É–º'—è–Ω–∞ Wonder Match 4B1", 'description': "2–≤1 —Ä—É–º'—è–Ω–∞ —ñ –≥—É–±–∏, –∑ –Ω—ñ–∞—Ü–∏–Ω–∞–º—ñ–¥–æ–º.", 'price': 190, 'image': 'wonder-match.jpg'},
    {'id': 15, 'name': "–ö–æ–Ω—Å–∏–ª–µ—Ä NYX Can't Stop Won't Stop", 'description': "–°—Ç—ñ–π–∫–∏–π, –º–∞—Å–∫—É—î –≤—Å—ñ –Ω–µ–¥–æ–ª—ñ–∫–∏.", 'price': 210, 'image': 'nyx-concealer.jpg'},
    {'id': 16, 'name': "–ü—É–¥—Ä–∞ NYX High Definition 01", 'description': "HD-–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –º–∞–∫—ñ—è–∂—É, –º—ñ–Ω–µ—Ä–∞–ª–∏.", 'price': 320, 'image': 'nyx-powder.jpg'}
]

@app.route('/')
def index():
    return render_template('index.html', products=products)

@app.route('/about')
def about():
    return render_template('about.html')

@app.route('/catalog')
def catalog():
    return render_template('catalog.html', products=products)

@app.route('/product/<int:product_id>')
def product(product_id):
    product = next((p for p in products if p['id'] == product_id), None)
    if product:
        return render_template('product.html', product=product)
    return "–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", 404

@app.route('/add_to_cart/<int:product_id>')
def add_to_cart(product_id):
    cart = request.cookies.get('cart')
    cart = json.loads(cart) if cart else []
    cart.append(product_id)
    resp = make_response(redirect(url_for('catalog')))
    resp.set_cookie('cart', json.dumps(cart))
    return resp

@app.route('/cart')
def cart():
    cart = request.cookies.get('cart')
    cart = json.loads(cart) if cart else []
    cart_items = [p for p in products if p['id'] in cart]
    return render_template('cart.html', cart_items=cart_items)

@app.route('/checkout', methods=['GET', 'POST'])
def checkout():
    cart = request.cookies.get('cart')
    cart = json.loads(cart) if cart else []
    cart_items = [p for p in products if p['id'] in cart]
    total = sum(item['price'] for item in cart_items)

    if request.method == 'POST':
        name = request.form['name']
        phone = request.form['phone']
        delivery = request.form['delivery']
        address = request.form['address']
        payment = request.form['payment']

        order = Order(
            name=name,
            phone=phone,
            delivery=delivery,
            address=address,
            payment=payment,
            products=json.dumps(cart_items),
            total=total
        )
        db.session.add(order)
        db.session.commit()

        resp = make_response(render_template('thank_you.html', total=total))
        resp.set_cookie('cart', '', expires=0)
        return resp

    return render_template('checkout.html', cart_items=cart_items, total=total)

@app.route('/buy_now/<int:product_id>')
def buy_now(product_id):
    cart = [product_id]  # —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä
    resp = make_response(redirect(url_for('checkout')))
    resp.set_cookie('cart', json.dumps(cart))
    return resp


if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    app.run(debug=True)
